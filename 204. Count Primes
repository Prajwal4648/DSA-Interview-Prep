import java.util.Arrays;

class Solution {
    public int countPrimes(int n) {
        // No prime numbers less than 2
        if (n <= 2) return 0;

        // Step 1: Create a boolean array to mark prime numbers
        boolean[] isPrime = new boolean[n];

        // Step 2: Initially assume all numbers from 2 to n-1 are prime
        Arrays.fill(isPrime, true);

        // Step 3: Mark 0 and 1 as not prime
        isPrime[0] = false;
        isPrime[1] = false;

        // Step 4: Start marking non-prime numbers
        // Loop from 2 to sqrt(n)
        for (int i = 2; i * i < n; i++) {
            if (isPrime[i]) {
                // Mark all multiples of i as non-prime
                for (int j = i * i; j < n; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        // Step 5: Count all numbers that are still marked as prime
        int count = 0;
        for (int i = 2; i < n; i++) {
            if (isPrime[i]) {
                count++;
            }
        }

        return count;
    }
}
